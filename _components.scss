// Componentes SCSS para Angular
@import 'variables';

// Componentes de botones usando mixins
.btn {
  @include button-style($color-primary);
  
  &.btn-secondary {
    @include button-style($color-secondary);
  }

  &.btn-success {
    @include button-style($color-success);
  }

  &.btn-outline {
    @include button-style(transparent, $color-primary);
    border: 1px solid $color-primary;

    &:hover {
      @include button-style($color-primary);
    }
  }

  &.btn-sm {
    padding: $spacing-xs $spacing-sm;
    font-size: $font-size-small;
  }

  &.btn-lg {
    padding: $spacing-md $spacing-lg;
    font-size: $font-size-large;
  }
}

// Cards de productos
.product-card {
  @include card-style;

  .product-image {
    width: 100%;
    height: 200px;
    background-color: $color-border;
    border-radius: $border-radius;
    margin-bottom: $spacing-md;
    overflow: hidden;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .product-title {
    font-family: $font-main;
    font-size: $font-size-large;
    color: $color-text;
    margin-bottom: $spacing-sm;
    font-weight: 600;
  }

  .product-price {
    font-family: $font-secondary;
    font-size: $font-size-subtitle;
    color: $color-primary;
    font-weight: bold;
    margin-bottom: $spacing-md;
  }

  .product-description {
    font-size: $font-size-small;
    color: $color-text-light;
    margin-bottom: $spacing-md;
    line-height: 1.5;
  }
}

// Grid responsive para productos
.products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: $spacing-lg;
  margin: $spacing-xl 0;

  @include responsive(md) {
    grid-template-columns: 1fr;
    gap: $spacing-md;
  }
}

// Formularios estilizados
.form-group {
  margin-bottom: $spacing-md;

  .form-label {
    display: block;
    font-family: $font-main;
    font-size: $font-size-small;
    font-weight: 500;
    color: $color-text;
    margin-bottom: $spacing-xs;
  }

  .form-input {
    width: 100%;
    font-family: $font-secondary;
    font-size: $font-size-base;
    padding: $spacing-sm;
    border: 1px solid $color-border;
    border-radius: $border-radius;
    transition: $transition-fast;

    &:focus {
      outline: none;
      border-color: $color-primary;
      box-shadow: 0 0 0 2px rgba(21, 101, 192, 0.1);
    }

    &.error {
      border-color: $color-error;
      box-shadow: 0 0 0 2px rgba(229, 57, 53, 0.1);
    }

    &.success {
      border-color: $color-success;
      box-shadow: 0 0 0 2px rgba(67, 160, 71, 0.1);
    }
  }

  .form-error {
    font-size: $font-size-small;
    color: $color-error;
    margin-top: $spacing-xs;
    display: block;
  }
}

// Navegación
.navbar {
  background-color: $color-white;
  box-shadow: $shadow-sm;
  padding: $spacing-sm 0;
  z-index: $z-navbar;
  position: sticky;
  top: 0;

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 $spacing-md;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .nav-brand {
    font-family: $font-main;
    font-size: $font-size-large;
    font-weight: bold;
    color: $color-primary;
    text-decoration: none;
  }

  .nav-menu {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;

    @include responsive(md) {
      display: none; // Implementar hamburger menu para móvil
    }
  }

  .nav-item {
    margin: 0 $spacing-sm;
  }

  .nav-link {
    font-family: $font-main;
    font-size: $font-size-base;
    color: $color-text;
    text-decoration: none;
    padding: $spacing-sm $spacing-md;
    border-radius: $border-radius;
    transition: $transition-fast;

    &:hover {
      color: $color-primary;
      background-color: rgba(21, 101, 192, 0.1);
    }

    &.active {
      color: $color-primary;
      font-weight: 500;
    }
  }
}

// Alertas mejoradas
.alert {
  padding: $spacing-md;
  border-radius: $border-radius;
  font-family: $font-secondary;
  font-size: $font-size-base;
  margin-bottom: $spacing-md;
  display: flex;
  align-items: center;
  position: relative;

  &.alert-success {
    background-color: lighten($color-success, 45%);
    border: 1px solid $color-success;
    color: darken($color-success, 20%);
  }

  &.alert-error {
    background-color: lighten($color-error, 45%);
    border: 1px solid $color-error;
    color: darken($color-error, 20%);
  }

  &.alert-warning {
    background-color: lighten($color-warning, 45%);
    border: 1px solid $color-warning;
    color: darken($color-warning, 30%);
  }

  .alert-icon {
    margin-right: $spacing-sm;
    font-size: $font-size-large;
  }

  .alert-close {
    position: absolute;
    top: $spacing-sm;
    right: $spacing-sm;
    background: none;
    border: none;
    font-size: $font-size-large;
    cursor: pointer;
    color: inherit;
  }
}

// Utilidades específicas para Angular
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: $z-modal;
}

.loading-spinner {
  border: 3px solid $color-border;
  border-top: 3px solid $color-primary;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}